#index.copy
  h2 Was ist botLiga?
  p botLiga ist eine elektronische Tipprunde. Dabei kannst du mit verschiedenen Algorithmen antreten, um möglichst exakt die Ergebnisse der 1. Fußball Bundesliga zu tippen.

  h2 Regeln
  ul.rules
    li 
      strong offener Quellcode 
      em die gesamten Sourcen deiner Bots müssen zugänglich auf github liegen
    li 
      strong offene Daten 
      em Du darfst beliebige externe Datenquellen (z.B. historische Statistiken, Wettquoten, Wetter und Horoskopdaten, etc.) verwenden. Diese Daten müssen aber allen Teilnehmern als Datenbank-Dump, CSV, API oder ähnlichem zur Verfügung gestellt werden.
    li
      strong nur algorithmische Tipps 
      em und kein manuelles Tippen über die API
    li
      strong jeder hat 3 Bots
      em du kannst parallel bis zu 3 verschiedene Algorithmen/Strategien laufen lassen, die unabhängig gewertet werden
    li
      strong der Bot darf während der Saison geändert werden
      em hast du neue Ideen, Bugfixes oder Inspirationen von gegnerischen Bots, dürft ihr euren Bot jederzeit überarbeiten
    li
      strong Tipps müssen eine Stunde vor Spielbeginn abgegeben sein

  h2 API
  
  h3 Tippabgabe über die REST API
  
  p Folgende Parameter müssen per 
    strong.code POST 
    span an 
    strong.code http:/\/botliga.de/api/guess 
    span übergeben werden:
  
  ul
    li
      strong match_id: 
      span die eindeutige ID des Spiels. Siehe 
        a(href="/datenquellen") Datenquellen
        |  für mehr Details.
    li
      strong token: 
      span das API-Token deines Bots. Dies findest du unter 
        a(href="/einstellungen") Einstellungen.
    li
      strong result: 
      span das getippte Ergebnis
  h4 Beispiele Aufruf mit curl
  pre
    span curl -X POST --data "
    span.highlight1 match_id=14181
    span &
    span.highlight2 token=[bot-token]
    span &
    span.highlight3 result=2:1
    span " http:\/\/botliga.de/api/guess

  h4 Beispiele Bot in Ruby
  script(src="https://gist.github.com/1051944.js")

  p Du kannst für die komplette Saison vortippen. Deine Tipps werden aber wahrscheinlich besser, die Ergenisse der letzten Spieltag mit berücksichtigst. Damit du keinen Spieltag vergisst, solltest du dir eine Erinnerung, einen CRON Job oder ähnliches einrichten.

  // temporary disabled crawler
  //
  //  h3 Alternativ: Ergebnisse vom botLiga Crawler abholen lassen
  //  p Wenn dein Algorithmus auf einem öffentlich zugänglichen Webserver gehostet hast, kann sich der botLiga Crawler die Ergebnisse für den nächsten Spieltag regelmäßig abholen.
  //  p
  //    | Den HTTP-Pfade zu deinem kannst du in den
  //    a(href="/einstellungen") Einstellungen
  //    |  deines Bots hinterlegen.
  //  p.highlight3 Hinweis: Der Crawler ist momentan noch nicht aktiv. 
  //
  //  h4 Stupid Text-File Bot
  //  p Die einfachste aber sicher auch lahmste Methode mitzumachen ist, eine Text-Datei mit einem konstanten Ergebnis auf einen Webserver zu legen und den Pfad beim Bot einzutragen.
  //  
  //  script(src="https://gist.github.com/1036516.js")
  //  
  //  h4 php Bot
  //  script(src="https://gist.github.com/1052074.js")
  //
  //  h4 Node.js Bot
  //  script(src="https://gist.github.com/1036501.js")

  h2 Punktevergabe
  ul
    li
      strong 5 Punkte 
      span für ein exaktes Ergebnis
    li
      strong 3 Punkte 
      span für die richtige Tordifferenz (außer Unentschieden) 
    li
      strong 2 Punkte 
      span die richtige Tendenz (Heimsieg, Auswärtssieg, Unentschieden)

    