#index.copy
  h2 Was ist botLiga?
  p botLiga ist eine elektronische Tipprunde. Dabei kannst du mit verschiedenen Algorithmen antreten, um möglichst exakt die Ergebnisse der 1. Fußball Bundesliga zu tippen.

  .leftCol
    h2 Regeln
    ul
      li 
        strong offener Quellcode 
        em Die gesamten Sourcen deiner Bots müssen zugänglich auf GitHub liegen.
      li 
        strong offene Daten 
        em Du darfst beliebige externe Datenquellen (z.B. historische Statistiken, Wettquoten, Wetter und Horoskopdaten, etc.) verwenden. Diese Daten müssen aber allen Teilnehmern als Datenbank-Dump, CSV, API oder ähnlichem zur Verfügung gestellt werden.
      li
        strong nur algorithmische Tipps 
        em Kein manuelles Tippen über die API.
      li
        strong jeder hat 3 Bots
        em Du kannst parallel bis zu 3 verschiedene Algorithmen/Strategien laufen lassen, die unabhängig gewertet werden.
      li
        strong der Bot darf während der Saison geändert werden
        em Hast du neue Ideen, Bugfixes oder Inspirationen von gegnerischen Bots, darfst du deinen Bot jederzeit überarbeiten.
      li
        strong Tipps müssen eine Stunde vor Spielbeginn abgegeben sein
        
    h2 Getting started  
    ol
      li
        | Mit GitHub OAuth 
        a(href='/auth/github') einloggen 
      li
        | Unter 
        a(href="/einstellungen") Meine Bots
        |  findest du dein API Token
      li Schreibe deinen Bot (siehe API und Beispiele)
      li
        | Lade Ihn in ein  
        a(href="https://github.com/repositories/new") neues GitHub Repository
      li
        | Gebe den Repository Namen bei 
        a(href="/einstellungen") Meine Bots
        |  an
      li Teste den Bot gegen die Spiele der 
        a(href="/datenquellen#lastSeason") letzten Saison

  .rightCol
    h2 Punktevergabe
    ul
      li exaktes Ergebnis: 5 Punkte 
      li richtige Tordifferenz: 3 Punkte 
      li richtige Tendenz: 2 Punkte 
      
    h2 API
    p Folgende Parameter müssen per 
      strong.code POST
      span= ' an ' 
      strong.code http://botliga.de/api/guess 
      span übergeben werden:

    ul
      li
        strong.code match_id
        em die eindeutige ID des Spiels. Siehe 
          a(href="/datenquellen") Datenquellen
          |  für mehr Details.
      li
        strong.code token
        em das API-Token deines Bots. Dies findest du unter 
          a(href="/einstellungen") Einstellungen.
      li
        strong.code result
        em das getippte Ergebnis

    h2 Inspirationen
    p Nutze die Chance und probiere mal eine neue Programmiersprache, Framework oder Bibliothek. Ausgefallene Ideen, Konzepte und Sprachen sind gerne gesehen.
    p
      strong Programmiersprachen-Ideen
      br
      a(href="http://www.ruby-lang.org/de/")
        strong Ruby
      |  
      a(href="http://www.macruby.org/")
        strong MacRuby
      |  
      a(href="http://iolanguage.com/")
        strong Io
      |  
      a(href="http://clojure.org/")
        strong Clojure
      |  
      a(href="http://www.erlang.org/")
        strong Erlang
      |  
      a(href="http://nodejs.org/")
        strong node.js
      |  
      a(href="http://jashkenas.github.com/coffee-script/")
        strong CoffeeScript
      |  
      a(href="http://en.wikipedia.org/wiki/Nu_(programming_language)")
        strong Nu
      |  
      a(href="http://www.scala-lang.org/")
        strong Scala
      |  
      a(href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html")
        strong ....
      | 
        
    p
      strong Machine Learning Bibliotheken
      br
      a(href="http://harthur.github.com/brain/")
        strong brain.js 
        em JavaScript
      |  
      a(href="http://pybrain.org/")
        strong PyBrain 
        em Python
      |  
      a(href="http://mahout.apache.org/")
        strong mahout 
        em Java
      |  
      a(href="http://code.google.com/p/aforge/")
        strong AForge.NET 
        em C#
      |  
      a(href="http://scikit-learn.sourceforge.net/index.html")
        strong scikits.learn 
        em Python
        
  h2 Beispiele
  h3 Aufruf mit curl
  pre
    span curl -X POST --data "
    span.highlight1 match_id=14181
    span &
    span.highlight2 token=[bot-token]
    span &
    span.highlight3 result=2:1
    span " http://botliga.de/api/guess

  h3 Bot in Ruby
  script(src="https://gist.github.com/1051944.js")

  h2 Tipps
  p Du kannst für die komplette Saison vortippen. Deine Tipps werden aber wahrscheinlich besser, wenn du die Ergebnisse der letzten Spieltage  mit berücksichtigst. Damit du keinen Spieltag vergisst, solltest du dir eine Erinnerung, einen CRON Job oder Ähnliches einrichten.

  // temporary disabled crawler
  //
  //  h3 Alternativ: Ergebnisse vom botLiga Crawler abholen lassen
  //  p Wenn dein Algorithmus auf einem öffentlich zugänglichen Webserver gehostet hast, kann sich der botLiga Crawler die Ergebnisse für den nächsten Spieltag regelmäßig abholen.
  //  p
  //    | Den HTTP-Pfade zu deinem kannst du in den
  //    a(href="/einstellungen") Einstellungen
  //    |  deines Bots hinterlegen.
  //  p.highlight3 Hinweis: Der Crawler ist momentan noch nicht aktiv. 
  //
  //  h4 Stupid Text-File Bot
  //  p Die einfachste aber sicher auch lahmste Methode mitzumachen ist, eine Text-Datei mit einem konstanten Ergebnis auf einen Webserver zu legen und den Pfad beim Bot einzutragen.
  //  
  //  script(src="https://gist.github.com/1036516.js")
  //  
  //  h4 php Bot
  //  script(src="https://gist.github.com/1052074.js")
  //
  //  h4 Node.js Bot
  //  script(src="https://gist.github.com/1036501.js")
    